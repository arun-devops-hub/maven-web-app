name: github actions demo
on: workflow_dispatch
jobs:
  demo_job:
    runs-on: self-hosted
    env:
      IMAGE_NAME: arunhub2/maven-web-app
    steps:
      - name: hello world job
        run: echo "hello world, hi from github!"
      - name: git repo clone
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
            java-version: '17'
            distribution: 'temurin'
            cache: maven
      - name: Set up Maven
        run: |
            echo ${GITHUB_WORKSPACE}
            cd ${GITHUB_WORKSPACE}
            sh ./maven_install.sh
            
      - name: Build with Maven
        run: mvn clean package
        
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: target/*.war
      - name: Trivy FS Scan
        run: |
          trivy fs --format table -o trivy-fs-report.html .
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Get Git commit SHA and branch name
        id: vars
        run: |
           echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
            docker build -t $IMAGE_NAME:latest .
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ env.COMMIT_SHA }}
            
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            
      - name: Push Docker Image
        run: docker push $IMAGE_NAME:${{ env.COMMIT_SHA }}

      - name: Update kubeconfig
        run: aws eks --region ap-south-1 update-kubeconfig --name demo

      - name: Deploy to kubernetes
        run: kubectl delete -f deployment-serice.yml
  
      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#training'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}




